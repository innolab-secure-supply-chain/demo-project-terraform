name: Aqua Scan
on:
    push:
        branches:
            - 'main'

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3
            - name: Set up JDK 11
              uses: actions/setup-java@v3
              with:
                  java-version: '11'
                  distribution: 'temurin'
            - name: Build with Maven
              run: mvn --batch-mode --update-snapshots package
            - name: Run Aqua scanner
              uses: docker://aquasec/aqua-scanner
              with:
                  args: trivy fs --scanners config,vuln,secret --sast .
                  # To customize which severities to scan for, add the following flag: --severity UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL
                  # To enable SAST scanning, add: --sast
                  # To enable npm/dotnet non-lock file scanning, add: --package-json / --dotnet-proj
              env:
                  AQUA_KEY: ${{ secrets.AQUA_KEY }}
                  AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
                  GITHUB_TOKEN: ${{ secrets.GH_ACTION_TOKEN }}
                  AQUA_URL: https://api.eu-1.supply-chain.cloud.aquasec.com
                  CSPM_URL: https://eu-1.api.cloudsploit.com
                  TRIVY_RUN_AS_PLUGIN: 'aqua'
                  # For http/https proxy configuration add env vars: HTTP_PROXY/HTTPS_PROXY, CA-CRET (path to CA certificate)

            - name: Manifest Generation
              run: |
                  export BILLY_SERVER=https://billy.eu-1.codesec.aquasec.com
                  curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
                  curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
                  if ! cat install.sh.checksum | sha256sum ; then
                  echo "install.sh checksum failed"
                  exit 1
                  fi
                  BINDIR="." sh install.sh
                  rm install.sh install.sh.checksum
                  ./billy generate \
                    --access-token "${{ secrets.GH_ACTION_TOKEN }}" \
                    --aqua-key "${{ secrets.AQUA_KEY }}" \
                    --aqua-secret "${{ secrets.AQUA_SECRET }}" \
                    --cspm-url https://eu-1.api.cloudsploit.com \
                    --artifact-path $(pwd)

                    # The docker image name:tag of the newly built image
                    # --artifact-path "my-image-name:${{ env.tag-version }}"
                    # OR the path to the root folder of your project. I.e my-repo/my-app
                    # --artifact-path "${{env.MY_APP_ROOT}}"
